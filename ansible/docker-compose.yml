version: '3'
services:
  ansible:
    container_name: ansible
    build:
      context: ./
      args:
        INSTALL_ANSIBLE: "true"
    networks:
      ansible_net:
        ipv4_address: 172.19.0.2  # Set a static IPv4 address for ansible
    volumes:
      - ./ansible:/ansible
      - ./ansible/ansible_hosts:/etc/ansible/hosts
    command: >
      sh -c "ssh-keygen -t rsa -N '' -f /root/.ssh/id_rsa > /dev/null &&
      cp ~/.ssh/id_rsa.pub authorized_keys &&
      tail -f /dev/null"

  remote_host_one:
    container_name: remote-host-one
    build:
      context: ./
      args:
        INSTALL_ANSIBLE: "false"
    networks:
      ansible_net:
        ipv4_address: 172.19.0.3  # Set a static IPv4 address for remote-host-one
    volumes:
      - ./ansible:/ansible
    command: >
      sh -c "mkdir -p /root/.ssh/ &&
      sleep 10 &&
      cp /ansible/authorized_keys ~/.ssh/ &&
      chmod 700 ~/.ssh &&
      chmod 600 ~/.ssh/authorized_keys &&
      /usr/sbin/sshd -D"

  remote_host_two:
    container_name: remote-host-two
    build:
      context: ./
      args:
        INSTALL_ANSIBLE: "false"
    networks:
      ansible_net:
        ipv4_address: 172.19.0.4  # Set a static IPv4 address for remote-host-two
    volumes:
      - ./ansible:/ansible
    command: >
      sh -c "mkdir -p /root/.ssh/ &&
      sleep 10 &&
      cp /ansible/authorized_keys ~/.ssh/ &&
      chmod 700 ~/.ssh &&
      chmod 600 ~/.ssh/authorized_keys &&
      sleep 10 &&
      rm /ansible/authorized_keys &&
      /usr/sbin/sshd -D"

networks:
  ansible_net:
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/24
